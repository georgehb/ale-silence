Include: silence_test_helper.vader
Before:
  let g:ale_silence_TESTING = 1
  runtime autoload/ale/silence.vim

  let Rubocop = EntryFor('rubocop')

  let g:ale_buffer_info = {
  \ 99: {
  \   'loclist': [
  \     {'bufnr': 98,  'lnum': 3, 'linter_name': 'test', 'code': 'err1'},
  \     {'bufnr': 99,  'lnum': 2, 'linter_name': 'test', 'code': 'err2'},
  \     {'bufnr': 99,  'lnum': 3, 'linter_name': 'test', 'code': 'err3'},
  \     {'bufnr': 99,  'lnum': 3, 'linter_name': 'test', 'code': 'err4'},
  \     {'bufnr': 99,  'lnum': 4, 'linter_name': 'test', 'code': 'err2'},
  \     {'bufnr': 100, 'lnum': 3, 'linter_name': 'test', 'code': 'err1'},
  \   ],
  \ }
  \}

Execute (ale#silence#complete completes errors in file):
  let g:ale_silence_TESTING_winbufnr = 99
  AssertEqual join([
    \ 'test:err2',
    \ 'test:err3',
    \ 'test:err4'
    \], "\n"), ale#silence#complete('', '2,4ALESilence', '')

Execute (ale#silence#complete only provides errors for current line):
  let bnr = bufnr('')
  let g:ale_silence_TESTING_winbufnr = bnr
  call SetBufferInfo(bnr,
    \ Rubocop(1, 'error1'),
    \)
  AssertEqual join([
    \ 'rubocop:error1'
    \], "\n"), ale#silence#complete('', 'ALESilence', '')
